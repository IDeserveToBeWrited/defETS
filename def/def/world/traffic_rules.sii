SiiNunit
{
# For modders: Please do not modify this file if you want to add a new entry. Create in
# this directory a new file "<base_name>.<idofyourmod>.sii" where <base_name> is name of
# base file without the extension (e.g. "city" for "/def/city.sii") and <idofyourmod> is
# some string which is unlikely to conflict with other mod.
#
# Warning: Even if the units are specified in more than one source file, they share the
# same namespace so suffixes or prefixes should be used to avoid conflicts.

@include "traffic_rules_spawn.sui"

traffic_rule_data : traffic_rule.major_road
{
	# name: "[sign] Priority road"

	rule: "priority"
	num_params[]: -1
	num_params[]: 0
	num_params[]: 2
}

traffic_rule_data : traffic_rule.minor_road
{
	rule: "priority"
	num_params[]: -1
	num_params[]: 0
	num_params[]: 1
}

traffic_rule_data : traffic_rule.give_way
{
	# name: "[sign] Give way (crossroad - slow down)"

	# The rule is not used as it was originally meant to (for non-hw roads only).
	# Disabling until solution is found
	#rule: "stop"
	#num_params[]: 0.0	# block time after reaching 'stop speed'
	#num_params[]: 8.0	# block while speed is higher than this [m/s]

	additional_rules[]: traffic_rule.minor_road
}

traffic_rule_data : traffic_rule.give_way_m
{
	# name: "[sign] Give way (motorway lane merge)"

	additional_rules[]: traffic_rule.minor_road
}


traffic_rule_data : traffic_rule.stop
{
	# Use this rule for both horizontal (road text) and vertical (traffic signs) 'stop' traffic rules
	# The actual vehicle stop position is moved to a nearby intersection or 'traffic_rule.cross_line' (if any)

	# name: "[sign] Stop"

	rule: "stop"
	num_params[]: 0.5	# block time after reaching 'stop speed'
	num_params[]: 0.5	# block while speed is higher than this [m/s]

	additional_rules[]: traffic_rule.minor_road
}

traffic_rule_data : traffic_rule.cross_line
{
	# Use this rule for (horizontal) crossroad traffic lines
	# NOTE: This rule does nothing by itself!
	# It only makes vehicles stop at the line if there is 'traffic_rule.stop' nearby or an intersection ahead

	#name: "[prefab] Crossroad stop line"

	rule: "property"
	num_params[]: 7
}

traffic_rule_data : traffic_rule.cross_line_s
{
	# Combined crossroad line and stop rule

	#name: "[prefab] Crossroad line + stop rule"

	additional_rules[]: traffic_rule.cross_line
	additional_rules[]: traffic_rule.stop
}

traffic_rule_data : traffic_rule.rblock_left
{
	rule: "road_block"
	num_params[]: -1
}

traffic_rule_data : traffic_rule.rblock_right
{
	rule: "road_block"
	num_params[]: 1
}

traffic_rule_data : traffic_rule.limit_end
{
	# name: "[sign] End of speed limit"

	rule: "speed_limit"
	num_params[]: 0
}

traffic_rule_data : traffic_rule.no_priority
{
	# name: "Reset priority"

	num_params[]: 0
	num_params[]: 0
	num_params[]: 0
}

traffic_rule_data : traffic_rule.impl_reset
{
	# name: "Implicit speed limit reset"

	rule: "speed_limit"
	num_params[]: 0
	num_params[]: 1
	str_params[]: "implicit"
}

traffic_rule_data : traffic_rule.cross_end
{
	# name: "[prefab] Crossroad end (reset speed limit and priority)"

	additional_rules[]: traffic_rule.impl_reset
	additional_rules[]: traffic_rule.no_priority
}

traffic_rule_data : traffic_rule.limit_5
{
	# name: "[speed] Speed limit 5"

	rule: "speed_limit"
	num_params[]: 5
}

traffic_rule_data : traffic_rule.limit_8
{
	# name: "[speed] Speed limit 8"

	rule: "speed_limit"
	num_params[]: 8
}

traffic_rule_data : traffic_rule.limit_10
{
	# name: "[speed] Speed limit 10"

	rule: "speed_limit"
	num_params[]: 10
}

traffic_rule_data : traffic_rule.limit_15
{
	# name: "[speed] Speed limit 15"

	rule: "speed_limit"
	num_params[]: 15
}

traffic_rule_data : traffic_rule.limit_20
{
	# name: "[speed] Speed limit 20"

	rule: "speed_limit"
	num_params[]: 20
}

traffic_rule_data : traffic_rule.limit_30
{
	# name: "[speed] Speed limit 30"

	rule: "speed_limit"
	num_params[]: 30
}

traffic_rule_data : traffic_rule.limit_40
{
	# name: "[speed] Speed limit 40"

	rule: "speed_limit"
	num_params[]: 40
}

traffic_rule_data : traffic_rule.limit_50
{
	# name: "[speed] Speed limit 50"

	rule: "speed_limit"
	num_params[]: 50
}

traffic_rule_data : traffic_rule.limit_60
{
	# name: "[speed] Speed limit 60"

	rule: "speed_limit"
	num_params[]: 60
}

traffic_rule_data : traffic_rule.limit_60_t
{
	# name: "[speed] Speed limit 60 (trucks only)"

	rule: "speed_limit"
	num_params[]: 60
	str_params[]: "truck_all"
}


traffic_rule_data : traffic_rule.limit_70
{
	# name: "[speed] Speed limit 70"

	rule: "speed_limit"
	num_params[]: 70
}

traffic_rule_data : traffic_rule.limit_80
{
	# name: "[speed] Speed limit 80"

	rule: "speed_limit"
	num_params[]: 80
}

traffic_rule_data : traffic_rule.limit_90
{
	# name: "[speed] Speed limit 90"

	rule: "speed_limit"
	num_params[]: 90
}

traffic_rule_data : traffic_rule.limit_100
{
	# name: "[speed] Speed limit 100"

	rule: "speed_limit"
	num_params[]: 100
}

traffic_rule_data : traffic_rule.limit_110
{
	# name: "[speed] Speed limit 110"

	rule: "speed_limit"
	num_params[]: 110
}

traffic_rule_data : traffic_rule.limit_120
{
	# name: "[speed] Speed limit 120"

	rule: "speed_limit"
	num_params[]: 120
}

traffic_rule_data : traffic_rule.limit_130
{
	# name: "[speed] Speed limit 130"

	rule: "speed_limit"
	num_params[]: 130
}

traffic_rule_data : traffic_rule.limit_100_60
{
	# name: "[speed] Speed limit 100 (60 for trucks)"

	rule: "speed_limit"
	num_params[]: 100
	num_params[]: 1		# 0 - include vehicle types (default), 1 - exclude vehicle types
	str_params[]: "truck_all"

	additional_rules[]: traffic_rule.limit_60_t
}

traffic_rule_data : traffic_rule.limit_80_60
{
	# name: "[speed] Speed limit 80 (60 for trucks)"

	rule: "speed_limit"
	num_params[]: 80
	num_params[]: 1		# 0 - include vehicle types (default), 1 - exclude vehicle types
	str_params[]: "truck_all"

	additional_rules[]: traffic_rule.limit_60_t
}

traffic_rule_data : traffic_rule.urban_area
{
	rule: "lane"
	str_params[]: "urban_area"
	str_params[]: "area"
}

traffic_rule_data : traffic_rule.no_road
{
	name: "[obsolete] No road vehicles"
	str_params[]: "Please remove"
}

traffic_rule_data : traffic_rule.no_trailer
{
	name: "[obsolete] No trailer area (areas with sharp curves)"

	str_params[]: "Please remove or replace with more suitable rule"
	additional_rules[]: traffic_rule.car_only
}

traffic_rule_data : traffic_rule.no_trailers
{
	# name: "[access] No trailers"
	rule: "actor_access"
	num_params[]: 0 	# 0 - disallow, 1 - allow
	num_params[]: 0 	# 0 - inclusive, 1 - exclusive
	num_params[]: 0 	# no change to vehicle access
	num_params[]: 1 	# set trailer access
	str_params[]: "road"
}

traffic_rule_data : traffic_rule.car_only
{
	name: "[access-exclusive] Cars only (no trailers)"
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	str_params[]: "car"

	additional_rules[]: traffic_rule.no_trailers
}

traffic_rule_data : traffic_rule.no_car_comp
{
	# kept only for backward compatibility
	rule: "actor_access"
	num_params[]: 0 	# 0 - disallow, 1 - allow
	num_params[]: 0 	# 0 - inclusive, 1 - exclusive
	str_params[]: "car_all"
}

traffic_rule_data : traffic_rule.no_cars
{
	name: "[obsolete] No cars"

	str_params[]: "Please remove and use corresponding access areas or exclusive access path rules."
	additional_rules[]: traffic_rule.no_car_comp
}

traffic_rule_data : traffic_rule.no_trucks
{
	# kept for backward compatibility
	# name: "[special] No trucks (backward compatibility only)"
	rule: "actor_access"
	num_params[]: 0 	# 0 - disallow, 1 - allow
	num_params[]: 0 	# 0 - inclusive, 1 - exclusive
	str_params[]: "truck_semi"
	str_params[]: "truck_heavy"
}

traffic_rule_data : traffic_rule.trucks_only
{
	name: "[access-exclusive] Trucks only (semi-trucks)"
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	str_params[]: "truck"
	str_params[]: "truck_semi"
	str_params[]: "truck_heavy"
}

traffic_rule_data : traffic_rule.no_bus_comp
{
	# kept only for backward compatibility
	rule: "actor_access"
	num_params[]: 0 	# 0 - disallow, 1 - allow
	num_params[]: 0 	# 0 - inclusive, 1 - exclusive
	str_params[]: "bus_all"
}

traffic_rule_data : traffic_rule.no_buses
{
	name: "[obsolete] No bus area"

	str_params[]: "Please remove and use corresponding access areas or exclusive access path rules."
	additional_rules[]: traffic_rule.no_bus_comp
}

traffic_rule_data : traffic_rule.buses_only
{
	name: "[access-exclusive] Buses only"
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	str_params[]: "bus"
}

traffic_rule_data : traffic_rule.tr_bus_only
{
	name: "[access-exclusive] Trucks and buses only"
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	str_params[]: "bus"
	str_params[]: "truck"
	str_params[]: "truck_semi"
	str_params[]: "truck_heavy"
}

traffic_rule_data : traffic_rule.custom_only
{
	name: "[access-exclusive] Custom vehicles only"
	rule: "actor_access"
	num_params[]: 1 # 0 - disallow, 1 - allow
	num_params[]: 1 # 0 - inclusive, 1 - exclusive
	str_params[]: "custom_all"
}

traffic_rule_data : traffic_rule.bus_transit
{
	# name: "[access] Allow bus transit only"
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	str_params[]: "bus_custom"
}

traffic_rule_data : traffic_rule.border_area
{
	name: "[obsolete] Border area"

	str_params[]: "Please remove and use '[context] Border crossing area' just over the actual border crossing"

	additional_rules[]: traffic_rule.s_car_h
	additional_rules[]: traffic_rule.s_truck_h
}

traffic_rule_data : traffic_rule.s_no_train
{
	name: "[obsolete] Disable train spawn"

	str_params[]: "Please remove"
}

traffic_rule_data : traffic_rule.city_xl_area
{
	name: "[context][urban] Large city - very high traffic density"

	additional_rules[]: traffic_rule.urban_area
	additional_rules[]: traffic_rule.s_car_uh
	additional_rules[]: traffic_rule.s_trl_u
	additional_rules[]: traffic_rule.s_trm_u
	additional_rules[]: traffic_rule.s_trh_u
	additional_rules[]: traffic_rule.s_truck_u
	additional_rules[]: traffic_rule.s_police_u
	additional_rules[]: traffic_rule.s_bus_h
	additional_rules[]: traffic_rule.s_bus_c
	additional_rules[]: traffic_rule.s_medical_u
	additional_rules[]: traffic_rule.s_fire_u
	additional_rules[]: traffic_rule.s_car_c_u
	additional_rules[]: traffic_rule.s_truck_c_u
}

traffic_rule_data : traffic_rule.city_area
{
	name: "[context][urban] City - high traffic density"

	additional_rules[]: traffic_rule.urban_area
	additional_rules[]: traffic_rule.s_car_u
	additional_rules[]: traffic_rule.s_trl_u
	additional_rules[]: traffic_rule.s_trm_u
	additional_rules[]: traffic_rule.s_trh_u
	additional_rules[]: traffic_rule.s_truck_u
	additional_rules[]: traffic_rule.s_police_u
	additional_rules[]: traffic_rule.s_bus_l
	additional_rules[]: traffic_rule.s_bus_c
	additional_rules[]: traffic_rule.s_medical_u
	additional_rules[]: traffic_rule.s_fire_u
	additional_rules[]: traffic_rule.s_car_cs_u
	additional_rules[]: traffic_rule.s_truck_cs_u
}

traffic_rule_data : traffic_rule.village_area
{
	name: "[context][urban] Village - low traffic density"

	# No traffic density change

	additional_rules[]: traffic_rule.urban_area
	additional_rules[]: traffic_rule.s_cust_r
}

traffic_rule_data : traffic_rule.city_centre
{
	# name: "[obsolete] Urban-specific vehicles area"

	str_params[]: "Please replace with [access] Custom vehicles area"

	additional_rules[]: traffic_rule.allow_custom
}

traffic_rule_data : traffic_rule.allow_slow
{
	# name: "[obsolete] Rural-specific vehicles area"

	str_params[]: "Please replace with [access] Custom vehicles area"

	additional_rules[]: traffic_rule.allow_custom
}

traffic_rule_data : traffic_rule.allow_custom
{
	name: "[access] Custom vehicles area"
	rule: "actor_access"
	num_params[]: 1 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "custom_all"
}

traffic_rule_data : traffic_rule.tourist
{
	name: "[context][zone] Tourist zone (parks, small roads with viewpoints, ...)"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "truck_all"
	str_params[]: "fire"
	str_params[]: "medical"

	#additional_rules[]: traffic_rule.s_trl_t
	additional_rules[]: traffic_rule.s_bus_h
}

traffic_rule_data : traffic_rule.resident
{
	name: "[context][zone] Residential zone (housing areas with small roads)"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "truck_all"
	str_params[]: "bus_all"
	str_params[]: "fire"
	str_params[]: "medical"
}

traffic_rule_data : traffic_rule.commerce_s
{
	name: "[context][zone] Commercial zone - small (car parks at shops, offices,...)"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "truck_all"
	str_params[]: "bus_all"
	str_params[]: "fire"
	str_params[]: "medical"
	str_params[]: "police"
}

traffic_rule_data : traffic_rule.commerce_l
{
	name: "[context][zone] Commercial zone - large (city center, airport,...)"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "truck_medium"
	str_params[]: "truck_heavy"
	str_params[]: "truck"
	str_params[]: "truck_long"
}

traffic_rule_data : traffic_rule.ind_area
{
	name: "[context][zone] Industrial zone (logistics)"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "car_all"
	str_params[]: "bus_all"
	str_params[]: "truck_light"
	str_params[]: "truck_long"
	str_params[]: "fire"
	str_params[]: "medical"

	additional_rules[]: traffic_rule.s_truck_d
}

traffic_rule_data : traffic_rule.rest_area
{
	name: "[context] Rest area (parking only)"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "car_trailer"
	str_params[]: "bus_all"
	str_params[]: "truck_light"
	str_params[]: "truck_medium"
	str_params[]: "truck_heavy"
	str_params[]: "truck_long"
	str_params[]: "fire"
	str_params[]: "medical"
	str_params[]: "police"

	additional_rules[]: traffic_rule.no_pl_limit
	additional_rules[]: traffic_rule.private_area
	additional_rules[]: traffic_rule.limit_30
}

traffic_rule_data : traffic_rule.gas_area
{
	name: "[context] Gas station area"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "car_trailer"
	str_params[]: "truck_light"
	str_params[]: "truck_medium"
	str_params[]: "truck_heavy"
	str_params[]: "truck_long"
	str_params[]: "fire"
	str_params[]: "medical"
	str_params[]: "police"

	additional_rules[]: traffic_rule.no_pl_limit
	additional_rules[]: traffic_rule.private_area
	additional_rules[]: traffic_rule.limit_30
}

traffic_rule_data : traffic_rule.truck_stop
{
	name: "[context] Truck stop area"

	additional_rules[]: traffic_rule.rest_area
}

traffic_rule_data : traffic_rule.weigh_area
{
	name: "[context] Weigh station area"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "car_all"
	str_params[]: "bus_all"
	str_params[]: "truck_light"
	str_params[]: "truck_medium"
	str_params[]: "truck_heavy"
	str_params[]: "fire"
	str_params[]: "medical"
	str_params[]: "police"

	additional_rules[]: traffic_rule.private_area
	additional_rules[]: traffic_rule.no_pl_limit
	additional_rules[]: traffic_rule.limit_30
}

traffic_rule_data : traffic_rule.tollgate
{
	name: "[context] Tollgate area"

	additional_rules[]: traffic_rule.excl_nav
}

traffic_rule_data : traffic_rule.border_cross
{
	name: "[context] Border crossing area"

	additional_rules[]: traffic_rule.no_pl_limit
	additional_rules[]: traffic_rule.limit_30
	additional_rules[]: traffic_rule.excl_nav

	additional_rules[]: traffic_rule.s_car_b
	additional_rules[]: traffic_rule.s_truck_b
	additional_rules[]: traffic_rule.s_bus_b
}

traffic_rule_data : traffic_rule.border_cr_s
{
	name: "[context] Border crossing area (inside Schengen)"

	additional_rules[]: traffic_rule.no_pl_limit
	additional_rules[]: traffic_rule.excl_nav

	additional_rules[]: traffic_rule.s_car_b
	additional_rules[]: traffic_rule.s_truck_b
	additional_rules[]: traffic_rule.s_bus_b
}

traffic_rule_data : traffic_rule.excl_nav
{
	rule: "property"
	num_params[]: 8
}

traffic_rule_data : traffic_rule.weigh_event
{
	name: "[special] Weigh event area"

	additional_rules[]: traffic_rule.s_truck_ws
}

traffic_rule_data : traffic_rule.w_truck_lane
{
	# allow access only for trucks eligible for weigh station visit
	additional_rules[]: traffic_rule.trucks_only
	additional_rules[]: traffic_rule.excl_nav
}

traffic_rule_data : traffic_rule.w_closed
{
	# closed weigh station - no vehicle access
	rule: "actor_access"
	num_params[]: 0 	# 0 - disallow, 1 - allow
	num_params[]: 0 	# 0 - inclusive, 1 - exclusive
	str_params[]: "road"
}

traffic_rule_data : traffic_rule.company_area
{
	name: "[context] Company area (depot)"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 2 # 0 - inclusive, 1 - exclusive, 2 - context-specific
	str_params[]: "car_trailer"
	str_params[]: "bus_all"
	str_params[]: "truck_light"
	str_params[]: "truck_medium"
	str_params[]: "truck_long"
	str_params[]: "fire"
	str_params[]: "medical"
	str_params[]: "police"

	additional_rules[]: traffic_rule.private_area
	additional_rules[]: traffic_rule.no_pl_limit
	additional_rules[]: traffic_rule.limit_30

	additional_rules[]: traffic_rule.s_train_dp
	additional_rules[]: traffic_rule.s_truck_c_d
	additional_rules[]: traffic_rule.s_truck_d
	additional_rules[]: traffic_rule.s_car_d
}

traffic_rule_data : traffic_rule.dealer
{
	name: "[context] Truck dealer area"

	additional_rules[]: traffic_rule.private_area
	additional_rules[]: traffic_rule.no_pl_limit
	additional_rules[]: traffic_rule.limit_30
}

traffic_rule_data : traffic_rule.depot_area
{
	name: "[obsolete] Depot area"

	str_params[]: "Please use rule '[context] Company area' instead over the *whole* company area - including entrance roads and the company prefab."
	additional_rules[]: traffic_rule.company_area
}

traffic_rule_data : traffic_rule.urban_start
{
	rule: "lane"
	str_params[]: "urban_area"
	str_params[]: "start"
}

traffic_rule_data : traffic_rule.urban_end
{
	rule: "lane"
	str_params[]: "urban_area"
	str_params[]: "end"
}

traffic_rule_data : traffic_rule.city_start
{
	# name: "[sign] City start"
	additional_rules[]: traffic_rule.urban_start
	additional_rules[]: traffic_rule.limit_end
}

traffic_rule_data : traffic_rule.city_end
{
	# name: "[sign] City end"
	additional_rules[]: traffic_rule.urban_end
	additional_rules[]: traffic_rule.limit_end
}

traffic_rule_data : traffic_rule.city_end_70
{
	# name: "[sign] City end + limit 70"
	additional_rules[]: traffic_rule.urban_end
	additional_rules[]: traffic_rule.limit_70
}

traffic_rule_data : traffic_rule.city_end_90
{
	# name: "[sign] City end + limit 90"
	additional_rules[]: traffic_rule.urban_end
	additional_rules[]: traffic_rule.limit_90
}

traffic_rule_data : traffic_rule.major_road_s
{
	# name: "[sign] City start + priority road"

	additional_rules[]: traffic_rule.city_start
	additional_rules[]: traffic_rule.major_road
}

traffic_rule_data : traffic_rule.major_road_e
{
	# name: "[sign] City end + priority road"

	additional_rules[]: traffic_rule.city_end
	additional_rules[]: traffic_rule.major_road
}

traffic_rule_data : traffic_rule.motorway_st2
{
	# name: "[sign] Motorway start"

	rule: "lane"
	str_params[]: "motorway"
	str_params[]: "start"
}

traffic_rule_data : traffic_rule.motorway_st
{
	# name: "[sign] Motorway start (cancel local limits)"

	rule: "lane"
	str_params[]: "motorway"
	str_params[]: "start"

	additional_rules[]: traffic_rule.limit_end
}

traffic_rule_data : traffic_rule.motorway_en2
{
	# name: "[sign] Motorway end"

	rule: "lane"
	str_params[]: "motorway"
	str_params[]: "end"
}

traffic_rule_data : traffic_rule.motorway_end
{
	# name: "[sign] Motorway end (cancel local limits)"

	rule: "lane"
	str_params[]: "motorway"
	str_params[]: "end"

	additional_rules[]: traffic_rule.limit_end
}

traffic_rule_data : traffic_rule.expressw_st
{
	# name: "[sign] Expressway start (cancel local limits)"

	rule: "lane"
	str_params[]: "expressway"
	str_params[]: "start"

	additional_rules[]: traffic_rule.limit_end
}

traffic_rule_data : traffic_rule.expressw_st2
{
	# name: "[sign] Expressway start"

	rule: "lane"
	str_params[]: "expressway"
	str_params[]: "start"
}

traffic_rule_data : traffic_rule.expressw_end
{
	# name: "[sign] Expressway end (cancel local limits)"

	rule: "lane"
	str_params[]: "expressway"
	str_params[]: "end"

	additional_rules[]: traffic_rule.limit_end
}

traffic_rule_data : traffic_rule.expressw_en2
{
	# name: "[sign] Expressway end"

	rule: "lane"
	str_params[]: "expressway"
	str_params[]: "end"
}

traffic_rule_data : traffic_rule.lane_join
{
	# name: "[prefab] Lane join"
	rule: "property"
	num_params[]: 17

	additional_rules[]: traffic_rule.impl_reset
}

traffic_rule_data : traffic_rule.lane_split
{
	# name: "[prefab] Lane split"
	rule: "property"
	num_params[]: 16
}

traffic_rule_data : traffic_rule.lane_add_o
{
	# name: "[prefab] New outer lane added"

	additional_rules[]: traffic_rule.impl_reset
}

traffic_rule_data : traffic_rule.lane_add_i
{
	# name: "[prefab] New inner lane added"

	additional_rules[]: traffic_rule.impl_reset
}

traffic_rule_data : traffic_rule.no_ai_turn
{
	name: "[navigation] No AI turn"

	additional_rules[]: traffic_rule.no_ai_left
	additional_rules[]: traffic_rule.no_ai_right
}

traffic_rule_data : traffic_rule.no_ai_left
{
	name: "[navigation] No AI left"
	rule: "property"
	num_params[]: 18
}

traffic_rule_data : traffic_rule.no_ai_right
{
	name: "[navigation] No AI right"
	rule: "property"
	num_params[]: 20
}

traffic_rule_data : traffic_rule.no_ai_str
{
	name: "[navigation] No AI straight"
	rule: "property"
	num_params[]: 22
}

traffic_rule_data : traffic_rule.low_pb_turn
{
	name: "[navigation] Low probability AI turn"

	additional_rules[]: traffic_rule.low_pb_left
	additional_rules[]: traffic_rule.low_pb_right
}

traffic_rule_data : traffic_rule.low_pb_left
{
	name: "[navigation] Low probability AI left"
	rule: "property"
	num_params[]: 19
}

traffic_rule_data : traffic_rule.low_pb_right
{
	name: "[navigation] Low probability AI right"
	rule: "property"
	num_params[]: 21
}

traffic_rule_data : traffic_rule.low_pb_str
{
	name: "[navigation] Low probability AI straight"
	rule: "property"
	num_params[]: 23
}

traffic_rule_data : traffic_rule.road
{
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 0 	# 0 - inclusive, 1 - exclusive
	str_params[]: "road"
}

traffic_rule_data : traffic_rule.lights_on
{
	rule: "lights"
	str_params[]: "front"
}

traffic_rule_data : traffic_rule.rail_train
{
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	num_params[]: 1 	# set vehicle access
	num_params[]: 1 	# set trailer access
	num_params[]: 0 	# disable player access
	str_params[]: "rail_train"

	additional_rules[]: traffic_rule.lights_on
	additional_rules[]: traffic_rule.private_area
}

traffic_rule_data : traffic_rule.train_cross
{
	# name: [prefab] Train crossing
	additional_rules[]: traffic_rule.rail_train
}

traffic_rule_data : traffic_rule.rail_tram
{
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	num_params[]: 1 	# set vehicle access
	num_params[]: 1 	# set trailer access
	num_params[]: 0 	# disable player access
	str_params[]: "rail_tram"

	additional_rules[]: traffic_rule.lights_on
	additional_rules[]: traffic_rule.private_area
}

traffic_rule_data : traffic_rule.road_tram
{
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 0 	# 0 - inclusive, 1 - exclusive
	str_params[]: "rail_tram"

	additional_rules[]: traffic_rule.s_tram
}

traffic_rule_data : traffic_rule.physics
{
	# name: "[prefab] Force physics"
	rule: "property"
	num_params[]: 25
}

traffic_rule_data : traffic_rule.private_area
{
	# name: "[various] Private area"
	rule: "property"
	num_params[]: 15
}

# Temporarily left for backward compatibility
traffic_rule_data : traffic_rule.private_road
{
	additional_rules[]: traffic_rule.private_area
}

traffic_rule_data : traffic_rule.uneven_road
{
	rule: "property"
	num_params[]: 24	# AI slow-down (without speed limit change)
	additional_rules[]: traffic_rule.physics
}

traffic_rule_data : traffic_rule.speed_bump_s
{
	name: "[various] Speed bump (slowdown + wheel physics)"

	rule: "stop"
	num_params[]: 1.5	# block time after reaching 'stop speed'
	num_params[]: 7.0	# block while speed is higher than this [m/s]
	num_params[]: 1

	additional_rules[]: traffic_rule.physics
}

traffic_rule_data : traffic_rule.speed_bump
{
	name: "[various] Speed bump (speed limit 20 + wheel physics)"
	rule: "speed_limit"
	num_params[]: 20

	additional_rules[]: traffic_rule.physics
}

traffic_rule_data : traffic_rule.speed_bump2
{
	name: "[various] Speed bump (wheel physics only)"

	additional_rules[]: traffic_rule.physics
}

traffic_rule_data : traffic_rule.overtake_alw
{
	# Allow overtaking
	rule: "property"
	num_params[]: 2
}

traffic_rule_data : traffic_rule.no_lane_chng
{
	# No lane change
	rule: "property"
	num_params[]: 0
	num_params[]: 1
}

traffic_rule_data : traffic_rule.es_fr_only
{
	name: "[access-escort] Front escort vehicles only"
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	num_params[]: 1 	# set vehicle access
	num_params[]: 0 	# no change to trailer access
	str_params[]: "escort_front"

	additional_rules[]: traffic_rule.private_area
	additional_rules[]: traffic_rule.excl_nav
}

traffic_rule_data : traffic_rule.es_ba_only
{
	name: "[access-escort] Back escort vehicles only"
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	num_params[]: 1 	# set vehicle access
	num_params[]: 0 	# no change to trailer access
	str_params[]: "escort_back"

	additional_rules[]: traffic_rule.private_area
	additional_rules[]: traffic_rule.excl_nav
}

traffic_rule_data : traffic_rule.escort_only
{
	name: "[access-escort] Escort vehicles only"
	rule: "actor_access"
	num_params[]: 1 	# 0 - disallow, 1 - allow
	num_params[]: 1 	# 0 - inclusive, 1 - exclusive
	num_params[]: 1 	# set vehicle access
	num_params[]: 0 	# no change to trailer access
	str_params[]: "escort_all"

	additional_rules[]: traffic_rule.private_area
	additional_rules[]: traffic_rule.excl_nav
}

traffic_rule_data : traffic_rule.no_escort
{
	# kept for backward compatibility
	str_params[]: "No longer needed, please remove."
}

traffic_rule_data : traffic_rule.train_stop_v
{
	name: "[various] Train stop very short"

	rule: "stop"
	num_params[]: 4.0
}

traffic_rule_data : traffic_rule.train_stop_s
{
	name: "[various] Train stop short"

	rule: "stop"
	num_params[]: 10.0
}

traffic_rule_data : traffic_rule.train_stop_l
{
	name: "[various] Train stop long"

	rule: "stop"
	num_params[]: 60.0
}

traffic_rule_data : traffic_rule.train_stop_f
{
	name: "[various] Train stop forever"

	rule: "stop"
	num_params[]: 1000000.0
}

traffic_rule_data : traffic_rule.no_chng_in
{
	# No lane change in
	rule: "property"
	num_params[]: 0
}

traffic_rule_data : traffic_rule.no_chng_out
{
	# No lane change out
	rule: "property"
	num_params[]: 1
}

traffic_rule_data : traffic_rule.no_pl_limit
{
	# No player speed limit
	rule: "property"
	num_params[]: 30
}

traffic_rule_data : traffic_rule.toll_small
{
	# name: "[prefab] Toll gate for small vehicles (cars)"

	rule: "actor_access"
	num_params[]: 0 # 0 - disallow, 1 - allow
	num_params[]: 0 # 0 - inclusive, 1 - exclusive
	str_params[]: "truck_all"
	str_params[]: "bus_all"
	str_params[]: "fire"
	str_params[]: "medical"
}

traffic_rule_data : traffic_rule.border_truck
{
	# name: "[prefab] Border gate for trucks"

	additional_rules[]: traffic_rule.trucks_only
	additional_rules[]: traffic_rule.excl_nav
}

}
